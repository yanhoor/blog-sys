version: '3'
networks:
  app-network:
    driver: bridge
services:
  koa:
    # working_dir: /projects/blog-node
    container_name: blog-koa
    # 开了会报错找不到依赖
#    volumes:
#      - ./projects/blog-node:/projects/blog-node
    restart: always
    build:
      context: ./projects/blog-node   # 构建的目录，这是本地目录，会在该目录下面寻找 Dockerfile
    depends_on: # 定义容器启动顺序 附带容器间的依赖关系
      - mysql
    ports:
      - "8000:8000"
    networks:
      - app-network

  manage:
    # working_dir: /projects/blog-manage
#    volumes:
#      - ./projects/blog-manage:/projects/blog-manage
    build:
      context: ./projects/blog-manage   # 构建的目录，这是本地目录，会在该目录下面寻找 Dockerfile
    ports:
      - "5173:5173"
    networks:
      - app-network

  nuxt:
    # working_dir: /projects/blog-nuxt3
    restart: always
#    volumes:
#      - ./projects/blog-nuxt3:/projects/blog-nuxt3
    build:
      context: ./projects/blog-nuxt3   # 构建的目录，这是本地目录，会在该目录下面寻找 Dockerfile
    ports:
      - "3000:3000" # 本地端口：容器端口，即外部访问用的是本地端口，容器端口是项目运行使用的端口
    networks:
      - app-network

  mysql:
    image: mysql:8.0 # 参考 https://hub.docker.com/_/mysql
    restart: always
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=145261yan
      # - MYSQL_USER=yanhoor # 创建用户
      # - MYSQL_PASSWORD=21w13e # 设置用户 yanhoor 密码
      - MYSQL_DATABASE=blogKoa2 # 创建初始数据库
      - TZ=Asia/Shanghai # 设置时区
    ports:
      - "3306:3306"
    networks:
      - app-network
