version: '3'                                    # 指定 docker-compose.yml 文件的写法格式
services:                                       # 多个容器集合
  koa:
    # working_dir: /projects/blog-node
    container_name: blog-koa
    # 开了会报错找不到依赖
    #    volumes:
    #      - ./projects/blog-node:/projects/blog-node
    restart: always
    build:
      context: ../projects/blog-node   # 构建的目录，这是本地目录，会在该目录下面寻找 Dockerfile
      dockerfile: ./Dockerfile-koa
    depends_on: # 定义容器启动顺序 附带容器间的依赖关系
      - mysql
      - redis
    ports:
      - "8000:8000" # 宿主机端口：容器端口
  #    networks:
  #      - app-network
  mysql:
    image: mysql:8.0 # 参考 https://hub.docker.com/_/mysql
    restart: always
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=145261yan
      # - MYSQL_USER=yanhoor # 创建用户
      # - MYSQL_PASSWORD=21w13e # 设置用户 yanhoor 密码
      - MYSQL_DATABASE=blogKoa2 # 创建初始数据库
      - TZ=Asia/Shanghai # 设置时区
    volumes: # 挂载数据卷
      #      - /usr/local/volumes/mysql:/var/lib/mysql  # 数据持久化
      - /var/lib/mysql:/var/lib/mysql  # 数据持久化
    ports:
      - "3307:3306"
    #    networks:
    #      - app-network
  redis:
    image: redis:7.0.10
    restart: always
    container_name: redis
    volumes:
      - /etc/redis/redis.conf:/etc/redis/redis.conf # 将本机的配置文件 ./redis.conf 挂在到容器 /etc/redis/redis.conf，可以看作是复制到对应路径
      - /usr/local/volumes/redis:/data # 数据持久化
    command: redis-server /etc/redis/redis.conf --appendonly yes
    ports:
      - "6380:6379"
  #    networks:
  #      - app-network
